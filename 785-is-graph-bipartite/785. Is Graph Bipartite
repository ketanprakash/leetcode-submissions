class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> colors(n, -1);

        queue<int> q;
        for (int i = 0; i < n; i++){
            if (colors[i] != -1) continue;
            colors[i] = 0; 
            q.push(i);

            while (!q.empty()){
                int node = q.front(); 
                q.pop(); 

                for (int child : graph[node]){
                    if (colors[child] != -1){
                        if (colors[child] == colors[node]) return false;
                        continue;
                    }
                    colors[child] = !colors[node];
                    q.push(child);
                }
            }
        }

        return true;
    }
};